# name: Frontend CI

# env:
#   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
#   VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

# on:
#   push:
#     branches: [ "develop", "feature/*", "main", "release/*"]

# jobs:
#   setup:
#     runs-on: ubuntu-22.04
#     strategy:
#       matrix:
#         node-version: [20]
#     steps:
#     - uses: actions/checkout@v4
#     - name: Install pnpm
#       uses: pnpm/action-setup@v4
#       with:
#         version: 9
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'pnpm'
#     - name: Install dependencies
#       run: pnpm install --no-frozen-lockfile
#     - name: Run Linting
#       run: pnpm run lint
#     - name: Run coverage test
#       run: pnpm run coverage
#     - name: Build Frontend
#       run: pnpm run build

#   deploy-preview:
#     runs-on: ubuntu-latest
#     needs: setup

#     steps:
#       - uses: actions/checkout@v2
#       - name: Install pnpm
#         uses: pnpm/action-setup@v4
#         with:
#           version: 9
#       - name: Install Vercel CLI
#         run: pnpm install --global vercel@latest
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts
#         run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
name: Frontend CI

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  push:
    branches: [ "develop", "feature/*", "main", "release/*"]

jobs:
  setup:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [20]
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9.15.9  # Usar la última versión estable de pnpm 9
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run Linting
      run: pnpm run lint
      
    - name: Run coverage test
      run: pnpm run coverage
      
    - name: Build Frontend
      run: pnpm run build

  deploy-preview:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4  # Actualizar a v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.9  # Usar la misma versión
          
      - name: Use Node.js 20  # Agregar setup de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}